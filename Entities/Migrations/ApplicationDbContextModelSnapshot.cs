// <auto-generated />
using System;
using Entities.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress");

                    b.Property<string>("CustomerEmail");

                    b.Property<string>("CustomerFirstName");

                    b.Property<string>("CustomerLastName");

                    b.Property<string>("CustomerPhoneNumber");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Entities.Models.Drink", b =>
                {
                    b.Property<int>("DrinkID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DrinkType");

                    b.Property<int?>("OrderID");

                    b.Property<decimal>("Price");

                    b.HasKey("DrinkID");

                    b.HasIndex("OrderID");

                    b.ToTable("Drink");
                });

            modelBuilder.Entity("Entities.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerID");

                    b.Property<int?>("CustomerID1");

                    b.Property<DateTime>("OrderDateTime");

                    b.Property<decimal>("OrderPrice");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Entities.Models.Pizza", b =>
                {
                    b.Property<int>("PizzaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PizzaBread");

                    b.Property<bool>("PizzaCheese");

                    b.Property<int>("PizzaDetailID");

                    b.Property<string>("PizzaSauce");

                    b.Property<string>("PizzaSize");

                    b.Property<string>("PizzaType");

                    b.HasKey("PizzaID");

                    b.HasIndex("PizzaDetailID");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("Entities.Models.PizzaDetail", b =>
                {
                    b.Property<int>("PizzaDetailID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderID");

                    b.Property<decimal>("PizzaDetailPrice");

                    b.Property<int>("PizzaID");

                    b.HasKey("PizzaDetailID");

                    b.HasIndex("OrderID");

                    b.ToTable("PizzaDetails");
                });

            modelBuilder.Entity("Entities.Models.Topping", b =>
                {
                    b.Property<int>("ToppingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PizzaID");

                    b.Property<string>("ToppingName");

                    b.Property<decimal>("ToppingPrice");

                    b.Property<string>("ToppingType");

                    b.HasKey("ToppingID");

                    b.HasIndex("PizzaID");

                    b.ToTable("Toppings");
                });

            modelBuilder.Entity("Entities.Models.Drink", b =>
                {
                    b.HasOne("Entities.Models.Order", "Order")
                        .WithMany("Drinks")
                        .HasForeignKey("OrderID");
                });

            modelBuilder.Entity("Entities.Models.Order", b =>
                {
                    b.HasOne("Entities.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID1");
                });

            modelBuilder.Entity("Entities.Models.Pizza", b =>
                {
                    b.HasOne("Entities.Models.PizzaDetail", "PizzaDetail")
                        .WithMany("Pizzas")
                        .HasForeignKey("PizzaDetailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entities.Models.PizzaDetail", b =>
                {
                    b.HasOne("Entities.Models.Order", "Order")
                        .WithMany("PizzaDetails")
                        .HasForeignKey("OrderID");
                });

            modelBuilder.Entity("Entities.Models.Topping", b =>
                {
                    b.HasOne("Entities.Models.Pizza", "Pizza")
                        .WithMany("Toppings")
                        .HasForeignKey("PizzaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
